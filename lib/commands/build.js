// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var Helpers, Promise, Sync, Tasks, helpers, tasks, _;

  _ = require("lodash");

  Promise = require("bluebird");

  Helpers = require("../util/Helpers");

  helpers = new Helpers();

  Tasks = require("../bundled-commands/Tasks");

  tasks = new Tasks();


  /**
     * Class to sync local and bundled hooks
     * @class Sync
     * @constructor
   */

  Sync = (function() {
    function Sync() {}


    /**
       * @method run
       * @param args {Object} accept arguments passed with sync command
       * @description Entry point to sync command
     */

    Sync.prototype.run = function(args, watch) {
      helpers.sortModules("build").then(function(hooks_to_proccess) {
        helpers.getConfig(function(err, ngconfig) {
          if (err) {
            helpers.trace(err);
          } else {
            helpers.run("generate:controller", hooks_to_proccess, ngconfig, args, function() {
              return tasks.parse().then(function() {
                return tasks.runTasks();
              }).then(function() {
                if (watch) {
                  tasks.checkAndStartServer();
                  tasks.registerWatchers();
                  return;
                }
              })["catch"](function(err) {
                helpers.trace(err);
              });
            });
          }
        });
      });
    };

    return Sync;

  })();

  module.exports = Sync;

}).call(this);
