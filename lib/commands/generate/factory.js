// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var Factory, LineUp, Promise, Runner, lineup, runner, _;

  _ = require("lodash");

  Promise = require("bluebird");

  Runner = require("../../util/Runner");

  runner = new Runner();

  LineUp = require("lineup");

  lineup = new LineUp();


  /**
     * Class to fetch and run hooks registered for generate:factory process/command
     * @class Factory
     * @constructor
   */

  Factory = (function() {
    function Factory() {}


    /**
       * @method run
       * @param args {Object} accept arguments passed with generate:factory command
       * @description Entry point to generate:factory command and run all registered hooks
     */

    Factory.prototype.run = function(args) {
      runner.sortModules("generate:factory").then(function(hooks_to_proccess) {
        if (_.size(hooks_to_proccess) > 0) {
          runner.getConfig(function(err, ngconfig) {
            if (err) {
              runner.trace(err);
            } else {
              runner.run("generate:factory", hooks_to_proccess, ngconfig, args);
            }
          });
        } else {
          runner.notify("warn", "0 hooks configured for this proccess");
          process.exit(1);
        }
      })["catch"](function(err) {
        runner.trace(err);
        process.exit(1);
      });
    };

    return Factory;

  })();

  module.exports = Factory;

}).call(this);
