// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var Helpers, Promise, Sync, helpers, sync, _;

  _ = require("lodash");

  Promise = require("bluebird");

  Helpers = require("../util/Helpers");

  helpers = new Helpers();

  Sync = require("../bundled-commands/Sync");

  sync = new Sync();


  /**
     * Class to sync local and bundled hooks
     * @class Sync
     * @constructor
   */

  Sync = (function() {
    function Sync() {}


    /**
       * @method run
       * @param args {Object} accept arguments passed with sync command
       * @description Entry point to sync command
     */

    Sync.prototype.run = function(args) {
      var type;
      type = false;
      if (args.type === "bundled") {
        type = "bundled";
      }
      sync.init(type).then(function(response) {
        return sync.fetchModules(response);
      }).then(function(response) {
        return sync.registerModules(response);
      }).then(function(success) {
        helpers.notify("success", success);
        process.exit(0);
      })["catch"](function(err) {
        helpers.trace(err);
      });
    };

    return Sync;

  })();

  module.exports = Sync;

}).call(this);
