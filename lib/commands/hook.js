// Generated by CoffeeScript 1.7.1
(function() {
  "use strict";
  var Helpers, Hook, Promise, helpers, _;

  _ = require("lodash");

  Promise = require("bluebird");

  Helpers = require("../util/Helpers");

  helpers = new Helpers();


  /**
     * Class to run anonymous hooks from anywhere and for any purpopse
     * @class Hook
     * @constructor
   */

  Hook = (function() {
    function Hook() {}


    /**
       * @method run
       * @param args {Object} accept arguments passed with hook command
       * @description Entry point to hook command and run all registered hooks
     */

    Hook.prototype.run = function(args) {
      helpers.getConfig(function(err, ngconfig) {
        var hook_to_run, hook_to_run_object;
        if (err) {
          helpers.trace(err);
        } else {
          hook_to_run = helpers.fetchHookMethod(args.hook);
          if (hook_to_run) {
            hook_to_run_object = {
              name: hook_to_run.name,
              _init: hook_to_run.path
            };
            helpers.run("hook", [hook_to_run_object], ngconfig, args);
          } else {
            helpers.notify("error", "" + args.command + " not found");
            process.exit(1);
            return;
          }
        }
      });
    };

    return Hook;

  })();

  module.exports = Hook;

}).call(this);
